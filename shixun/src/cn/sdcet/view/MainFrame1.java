package cn.sdcet.view;
import java.awt.BorderLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.FocusEvent;
import java.awt.event.FocusListener;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;

import javax.swing.ButtonGroup;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;
import javax.swing.table.TableColumnModel;
import javax.swing.table.TableModel;

import cn.sdcet.base.DbaseUtil;
import cn.sdcet.dao.Addressdao;
import cn.sdcet.dao.impl.Addressdaoimpl;
import cn.sdcet.db.Address;


public class MainFrame1 extends javax.swing.JFrame implements ListSelectionListener,ActionListener{

    /**
     * Creates new form NewJFrame2
     */
    public MainFrame1() {
        initComponents();
        ButtonGroup buttonGroup1=new ButtonGroup();
        buttonGroup1.add(jRadioButton1);
        buttonGroup1.add(jRadioButton2);
        buttonGroup1.add(jRadioButton3);
        jList1.addListSelectionListener(this);
        jButton1.addActionListener(this);
        jButton2.addActionListener(this);
        jButton3.addActionListener(this);
        jButton4.addActionListener(this);
        jButton5.addActionListener(this);
        jButton6.addActionListener(this);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList();
        jButton2 = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        panel1 = new java.awt.Panel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jRadioButton1 = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();
        jRadioButton3 = new javax.swing.JRadioButton();
        jButton6 = new javax.swing.JButton();

        jButton1.setText("jButton1");

        jButton3.setText("jButton3");

        jButton4.setText("jButton4");

        jButton5.setText("jButton5");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jList1.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "家人", "朋友", "同学", "闺蜜" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(jList1);

        jButton2.setText("搜索");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "name", "tel", "QQ"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        String[] columns = { "姓名", "电话", "QQ" };
        model = new DefaultTableModel(null, columns);
        jTable1 = new JTable(model);
        jScrollPane2.setViewportView(jTable1);

        javax.swing.GroupLayout panel1Layout = new javax.swing.GroupLayout(panel1);
        panel1.setLayout(panel1Layout);
        panel1Layout.setHorizontalGroup(
            panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panel1Layout.setVerticalGroup(
            panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel1Layout.createSequentialGroup()
                .addGap(0, 25, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jRadioButton1.setText("按姓名");

        jRadioButton2.setText("按电话");

        jRadioButton3.setText("按QQ");

        jButton6.setText("返回");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton6)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jRadioButton1)
                                .addComponent(jRadioButton2)
                                .addComponent(jRadioButton3))
                            .addComponent(jButton2, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextField1)
                            .addComponent(panel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jButton6)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(jRadioButton1)
                        .addGap(10, 10, 10)
                        .addComponent(jRadioButton2)
                        .addGap(18, 18, 18)
                        .addComponent(jRadioButton3))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(panel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(61, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(69, 69, 69))
        );

        pack();
    }// </editor-fold>                        

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrame1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrame1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainFrame1().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify                     
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JList jList1;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JRadioButton jRadioButton3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    private java.awt.Panel panel1;
    // End of variables declaration
    private static DefaultTableModel model;
    private DefaultTableModel dataModel;
    // End of variables declaration                   
    @Override
    public void actionPerformed(ActionEvent e) {
    	String str=e.getActionCommand();
    	if ("搜索".equals(str)&&jList1.getSelectedIndex()==0&&jRadioButton1.isSelected()){
    		DefaultTableModel tableModel = (DefaultTableModel)jTable1.getModel();
			tableModel.setRowCount(0);
			Addressdao ad=new Addressdaoimpl();
			Addressdaoimpl ad1=new Addressdaoimpl();
			
			Connection conn=DbaseUtil.getConnection();
	 		
	 		String sql="select name,telephone,qq from jiaren";
	 		
	 	
	 		try {
	 			
	 			PreparedStatement ptmt = conn.prepareStatement(sql);

	 		ResultSet rs=ptmt.executeQuery();
	 		while(rs.next()){
	 			int i=0;
	 			if(rs.getString("name").equals(jTextField1.getText())){
	 				String name1=rs.getString(1);
	 				String tel1=rs.getString(2);
	 				String qq1=rs.getString(3);
	 				model.addRow(new String[] {name1, tel1, qq1});
	 	}
			          
	 		}
	 		} catch (SQLException e1) {
				// TODO Auto-generated catch block
				e1.printStackTrace();
			}
    	}else if("搜索".equals(str)&&jList1.getSelectedIndex()==0&&jRadioButton2.isSelected()){
    		DefaultTableModel tableModel = (DefaultTableModel)jTable1.getModel();
			tableModel.setRowCount(0);
			Addressdao ad=new Addressdaoimpl();
			Addressdaoimpl ad1=new Addressdaoimpl();
			
			Connection conn=DbaseUtil.getConnection();
	 		
	 		String sql="select name,telephone,qq from jiaren";
	 		
	 	
	 		try {
	 			
	 			PreparedStatement ptmt = conn.prepareStatement(sql);

	 		ResultSet rs=ptmt.executeQuery();
	 		while(rs.next()){
	 			int i=0;
	 			if(rs.getString("telephone").equals(jTextField1.getText())){
	 				String name1=rs.getString(1);
	 				String tel1=rs.getString(2);
	 				String qq1=rs.getString(3);
	 				model.addRow(new String[] {name1, tel1, qq1});
	 	}
			          
	 		}
	 		} catch (SQLException e1) {
				// TODO Auto-generated catch block
				e1.printStackTrace();
			}
    		}
 		
 		else if("搜索".equals(str)&&jList1.getSelectedIndex()==0&&jRadioButton3.isSelected()){
 			DefaultTableModel tableModel = (DefaultTableModel)jTable1.getModel();
			tableModel.setRowCount(0);
			Addressdao ad=new Addressdaoimpl();
			Addressdaoimpl ad1=new Addressdaoimpl();
			
			Connection conn=DbaseUtil.getConnection();
	 		
	 		String sql="select name,telephone,qq from jiaren";
	 		
	 	
	 		try {
	 			
	 			PreparedStatement ptmt = conn.prepareStatement(sql);

	 		ResultSet rs=ptmt.executeQuery();
	 		while(rs.next()){
	 			int i=0;
	 			if(rs.getString("qq").equals(jTextField1.getText())){
	 				String name1=rs.getString(1);
	 				String tel1=rs.getString(2);
	 				String qq1=rs.getString(3);
	 				model.addRow(new String[] {name1, tel1, qq1});
	 	}
			          
	 		}
	 		} catch (SQLException e1) {
				// TODO Auto-generated catch block
				e1.printStackTrace();
			}
 		}
 		else if ("搜索".equals(str)&&jList1.getSelectedIndex()==1&&jRadioButton1.isSelected()){
 			
 			DefaultTableModel tableModel = (DefaultTableModel)jTable1.getModel();
			tableModel.setRowCount(0);
			Addressdao ad=new Addressdaoimpl();
			Addressdaoimpl ad1=new Addressdaoimpl();
			
			Connection conn=DbaseUtil.getConnection();
	 		
	 		String sql="select name,telephone,qq from pengyou";
	 		
	 	
	 		try {
	 			
	 			PreparedStatement ptmt = conn.prepareStatement(sql);

	 		ResultSet rs=ptmt.executeQuery();
	 		while(rs.next()){
	 			int i=0;
	 			if(rs.getString("name").equals(jTextField1.getText())){
	 				String name1=rs.getString(1);
	 				String tel1=rs.getString(2);
	 				String qq1=rs.getString(3);
	 				model.addRow(new String[] {name1, tel1, qq1});
	 	}
			          
	 		}
	 		} catch (SQLException e1) {
				// TODO Auto-generated catch block
				e1.printStackTrace();
			}
 		}else if("搜索".equals(str)&&jList1.getSelectedIndex()==1&&jRadioButton2.isSelected()){
 			DefaultTableModel tableModel = (DefaultTableModel)jTable1.getModel();
			tableModel.setRowCount(0);
			Addressdao ad=new Addressdaoimpl();
			Addressdaoimpl ad1=new Addressdaoimpl();
			
			Connection conn=DbaseUtil.getConnection();
	 		
	 		String sql="select name,telephone,qq from pengyou";
	 		
	 	
	 		try {
	 			
	 			PreparedStatement ptmt = conn.prepareStatement(sql);

	 		ResultSet rs=ptmt.executeQuery();
	 		while(rs.next()){
	 			int i=0;
	 			if(rs.getString("telephone").equals(jTextField1.getText())){
	 				String name1=rs.getString(1);
	 				String tel1=rs.getString(2);
	 				String qq1=rs.getString(3);
	 				model.addRow(new String[] {name1, tel1, qq1});
	 	}
			          
	 		}
	 		} catch (SQLException e1) {
				// TODO Auto-generated catch block
				e1.printStackTrace();
			}
 		}
 		else if("搜索".equals(str)&&jList1.getSelectedIndex()==1&&jRadioButton3.isSelected()){
 			DefaultTableModel tableModel = (DefaultTableModel)jTable1.getModel();
			tableModel.setRowCount(0);
			Addressdao ad=new Addressdaoimpl();
			Addressdaoimpl ad1=new Addressdaoimpl();
			
			Connection conn=DbaseUtil.getConnection();
	 		
	 		String sql="select name,telephone,qq from pengyou";
	 		
	 	
	 		try {
	 			
	 			PreparedStatement ptmt = conn.prepareStatement(sql);

	 		ResultSet rs=ptmt.executeQuery();
	 		while(rs.next()){
	 			int i=0;
	 			if(rs.getString("qq").equals(jTextField1.getText())){
	 				String name1=rs.getString(1);
	 				String tel1=rs.getString(2);
	 				String qq1=rs.getString(3);
	 				model.addRow(new String[] {name1, tel1, qq1});
	 	}
			          
	 		}
	 		} catch (SQLException e1) {
				// TODO Auto-generated catch block
				e1.printStackTrace();
			}
 		}
	 		else if ("搜索".equals(str)&&jList1.getSelectedIndex()==2&&jRadioButton1.isSelected()){	
	 			
	 			DefaultTableModel tableModel = (DefaultTableModel)jTable1.getModel();
				tableModel.setRowCount(0);
				Addressdao ad=new Addressdaoimpl();
				Addressdaoimpl ad1=new Addressdaoimpl();
				
				Connection conn=DbaseUtil.getConnection();
		 		
		 		String sql="select name,telephone,qq from tongxue";
		 		
		 	
		 		try {
		 			
		 			PreparedStatement ptmt = conn.prepareStatement(sql);

		 		ResultSet rs=ptmt.executeQuery();
		 		while(rs.next()){
		 			int i=0;
		 			if(rs.getString("name").equals(jTextField1.getText())){
		 				String name1=rs.getString(1);
		 				String tel1=rs.getString(2);
		 				String qq1=rs.getString(3);
		 				model.addRow(new String[] {name1, tel1, qq1});
		 	}
				          
		 		}
		 		} catch (SQLException e1) {
					// TODO Auto-generated catch block
					e1.printStackTrace();
				}
	 		}else if("搜索".equals(str)&&jList1.getSelectedIndex()==2&&jRadioButton2.isSelected()){
	 			DefaultTableModel tableModel = (DefaultTableModel)jTable1.getModel();
				tableModel.setRowCount(0);
				Addressdao ad=new Addressdaoimpl();
				Addressdaoimpl ad1=new Addressdaoimpl();
				
				Connection conn=DbaseUtil.getConnection();
		 		
		 		String sql="select name,telephone,qq from tongxue";
		 		
		 	
		 		try {
		 			
		 			PreparedStatement ptmt = conn.prepareStatement(sql);

		 		ResultSet rs=ptmt.executeQuery();
		 		while(rs.next()){
		 			int i=0;
		 			if(rs.getString("telephone").equals(jTextField1.getText())){
		 				String name1=rs.getString(1);
		 				String tel1=rs.getString(2);
		 				String qq1=rs.getString(3);
		 				model.addRow(new String[] {name1, tel1, qq1});
		 	}
				          
		 		}
		 		} catch (SQLException e1) {
					// TODO Auto-generated catch block
					e1.printStackTrace();
				}
	 		}
	 		else if("搜索".equals(str)&&jList1.getSelectedIndex()==2&&jRadioButton3.isSelected()){
	 			DefaultTableModel tableModel = (DefaultTableModel)jTable1.getModel();
				tableModel.setRowCount(0);
				Addressdao ad=new Addressdaoimpl();
				Addressdaoimpl ad1=new Addressdaoimpl();
				
				Connection conn=DbaseUtil.getConnection();
		 		
		 		String sql="select name,telephone,qq from tongxue";
		 		
		 	
		 		try {
		 			
		 			PreparedStatement ptmt = conn.prepareStatement(sql);

		 		ResultSet rs=ptmt.executeQuery();
		 		while(rs.next()){
		 			int i=0;
		 			if(rs.getString("qq").equals(jTextField1.getText())){
		 				String name1=rs.getString(1);
		 				String tel1=rs.getString(2);
		 				String qq1=rs.getString(3);
		 				model.addRow(new String[] {name1, tel1, qq1});
		 	}
				          
		 		}
		 		} catch (SQLException e1) {
					// TODO Auto-generated catch block
					e1.printStackTrace();
				}
	 		}
		 		else if ("搜索".equals(str)&&jList1.getSelectedIndex()==3&&jRadioButton1.isSelected()){
		 			DefaultTableModel tableModel = (DefaultTableModel)jTable1.getModel();
					tableModel.setRowCount(0);
					Addressdao ad=new Addressdaoimpl();
					Addressdaoimpl ad1=new Addressdaoimpl();
					
					Connection conn=DbaseUtil.getConnection();
			 		
			 		String sql="select name,telephone,qq from giumi";
			 		
			 	
			 		try {
			 			
			 			PreparedStatement ptmt = conn.prepareStatement(sql);

			 		ResultSet rs=ptmt.executeQuery();
			 		while(rs.next()){
			 			int i=0;
			 			if(rs.getString("name").equals(jTextField1.getText())){
			 				String name1=rs.getString(1);
			 				String tel1=rs.getString(2);
			 				String qq1=rs.getString(3);
			 				model.addRow(new String[] {name1, tel1, qq1});
			 	}
					          
			 		}
			 		} catch (SQLException e1) {
						// TODO Auto-generated catch block
						e1.printStackTrace();
					}
	
}else if("搜索".equals(str)&&jList1.getSelectedIndex()==3&&jRadioButton2.isSelected()){
	DefaultTableModel tableModel = (DefaultTableModel)jTable1.getModel();
	tableModel.setRowCount(0);
	Addressdao ad=new Addressdaoimpl();
	Addressdaoimpl ad1=new Addressdaoimpl();
	
	Connection conn=DbaseUtil.getConnection();
		
		String sql="select name,telephone,qq from giumi";
		
	
		try {
			
			PreparedStatement ptmt = conn.prepareStatement(sql);

		ResultSet rs=ptmt.executeQuery();
		while(rs.next()){
			int i=0;
			if(rs.getString("telephone").equals(jTextField1.getText())){
				String name1=rs.getString(1);
				String tel1=rs.getString(2);
				String qq1=rs.getString(3);
				model.addRow(new String[] {name1, tel1, qq1});
	}
	          
		}
		} catch (SQLException e1) {
		// TODO Auto-generated catch block
		e1.printStackTrace();
	}
	}
	else if("搜索".equals(str)&&jList1.getSelectedIndex()==3&&jRadioButton3.isSelected()){
		DefaultTableModel tableModel = (DefaultTableModel)jTable1.getModel();
		tableModel.setRowCount(0);
		Addressdao ad=new Addressdaoimpl();
		Addressdaoimpl ad1=new Addressdaoimpl();
		
		Connection conn=DbaseUtil.getConnection();
 		
 		String sql="select name,telephone,qq from giumi";
 		
 	
 		try {
 			
 			PreparedStatement ptmt = conn.prepareStatement(sql);

 		ResultSet rs=ptmt.executeQuery();
 		while(rs.next()){
 			int i=0;
 			if(rs.getString("qq").equals(jTextField1.getText())){
 				String name1=rs.getString(1);
 				String tel1=rs.getString(2);
 				String qq1=rs.getString(3);
 				model.addRow(new String[] {name1, tel1, qq1});
 	}
		          
 		}
 		} catch (SQLException e1) {
			// TODO Auto-generated catch block
			e1.printStackTrace();
		}
	}else if("返回".equals(str)){
		hide();
		LoginFrame a=new LoginFrame();
		a.setBounds(200, 300, 350, 300);
		a.setVisible(true);
		a.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		a.setResizable(false);
	}
    	
    }

    public void valueChanged(ListSelectionEvent e) {
    	
    	if(jList1.getSelectedIndex()==0){
    		DefaultTableModel tableModel = (DefaultTableModel)jTable1.getModel();
    		tableModel.setRowCount(0);
    		try {
    	        Connection conn=DbaseUtil.getConnection();
    	 		
    	 		String sql="select * from jiaren";
    	 		PreparedStatement ptmt = conn.prepareStatement(sql);
    		    ResultSet rs;
    	        jTable1 = new JTable(model);
    	       
    				rs = ptmt.executeQuery();
    			
    			while(rs.next()){
    					String name=rs.getString(1);
    					String tel=rs.getString(2);
    					String qq=rs.getString(3);
    	        // 自己把数据库差出来的数据放到表格里
    	        model.addRow(new String[] {name, tel, qq});
    			}
    			} catch (SQLException e1) {
    				// TODO Auto-generated catch block
    				e1.printStackTrace();
    			}
    	}else if(jList1.getSelectedIndex()==1){
    		DefaultTableModel tableModel = (DefaultTableModel)jTable1.getModel();
			tableModel.setRowCount(0);
    		try {
    	        Connection conn=DbaseUtil.getConnection();
    	 		
    	 		String sql="select * from pengyou";
    	 		PreparedStatement ptmt = conn.prepareStatement(sql);
    		    ResultSet rs;
    	        jTable1 = new JTable(model);
    	       
    				rs = ptmt.executeQuery();
    			
    			while(rs.next()){
    					String name=rs.getString(1);
    					String tel=rs.getString(2);
    					String qq=rs.getString(3);
    	        // 自己把数据库差出来的数据放到表格里
    	        model.addRow(new String[] {name, tel, qq});
    			}
    			} catch (SQLException e1) {
    				// TODO Auto-generated catch block
    				e1.printStackTrace();
    			}
    	}
    	else if(jList1.getSelectedIndex()==2){
    		DefaultTableModel tableModel = (DefaultTableModel)jTable1.getModel();
			tableModel.setRowCount(0);
    		try {
    	        Connection conn=DbaseUtil.getConnection();
    	 		
    	 		String sql="select * from tongxue";
    	 		PreparedStatement ptmt = conn.prepareStatement(sql);
    		    ResultSet rs;
    	        jTable1 = new JTable(model);
    	       
    				rs = ptmt.executeQuery();
    			
    			while(rs.next()){
    					String name=rs.getString(1);
    					String tel=rs.getString(2);
    					String qq=rs.getString(3);
    	        // 自己把数据库差出来的数据放到表格里
    	        model.addRow(new String[] {name, tel, qq});
    			}
    			} catch (SQLException e1) {
    				// TODO Auto-generated catch block
    				e1.printStackTrace();
    			}
    	}
    	else if(jList1.getSelectedIndex()==3){
    		DefaultTableModel tableModel = (DefaultTableModel)jTable1.getModel();
			tableModel.setRowCount(0);
    		try {
    	        Connection conn=DbaseUtil.getConnection();
    	 		
    	 		String sql="select * from giumi";
    	 		PreparedStatement ptmt = conn.prepareStatement(sql);
    		    ResultSet rs;
    	        jTable1 = new JTable(model);
    	       
    				rs = ptmt.executeQuery();
    			
    			while(rs.next()){
    					String name=rs.getString(1);
    					String tel=rs.getString(2);
    					String qq=rs.getString(3);
    	        // 自己把数据库差出来的数据放到表格里
    	        model.addRow(new String[] {name, tel, qq});
    			}
    			} catch (SQLException e1) {
    				// TODO Auto-generated catch block
    				e1.printStackTrace();
    			}
    		}

    }
    

}

